variables:
  appDir: 'fakebook/'

trigger:
  branches:
   include: 
     - main

pr:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    jobs:
    - job: build
      variables:
        imageName: 'fakebookng'
      
      steps:
      - task: Docker@2
        displayName: Build Docker Image
        inputs:
          repository: $(imageName)
          command: 'build'
          Dockerfile: '$(appdir)Dockerfile'
  
  - stage: SonarCloud
    dependsOn: []
    jobs:
    - job: build
      steps:
      # using node version 15.x to enforce npm 7.x
      - task: NodeTool@0
        inputs:
          versionSpec: '15.x'
        displayName: 'Install Node.js'

      - script: npm ci
        displayName: npm install
        workingDirectory: $(appDir)

      - script: npx ng build --prod
        displayName: ng build
        workingDirectory: $(appDir)
      
      - script: npx ng lint
        displayName: ng lint
        workingDirectory: $(appDir)
      
      - script: npx ng test
        displayName: ng test
        workingDirectory: $(appDir)

      - task: SonarCloudPrepare@1
        displayName: 'sonarcloud prepare'
        inputs:
          SonarCloud: 'SonarCloud Token'
          organization: '2011-fakebook-project3'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: '2011-fakebook-project3_ng'
          cliProjectName: 'ng'
          cliSources: '$(appDir)/src'

      - task: SonarCloudAnalyze@1
        displayName: 'sonarcloud analyze'

      - task: SonarCloudPublish@1
        displayName: 'sonarcloud publish'
        inputs:
          pollingTimeoutSec: '300'